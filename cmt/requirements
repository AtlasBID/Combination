package Combination

use AtlasPolicy                 AtlasPolicy-*

#
# We are using the combinator parser, spirit, in boost
# to parse our text files.
#
use CalibrationDataInterface	CalibrationDataInterface-*	PhysicsAnalysis/JetTagging/JetTagPerformanceCalibration

#
# We need the boost library
#
use AtlasBoost                  AtlasBoost-*             External

#
# Library and app build instructions.
#

library Combination *.cxx
 
application FTCopyDefaults ../bin/FTCopyDefaults.cxx
application FTManipSys ../bin/FTManipSys.cxx
application FTDStarCalc ../bin/FTDStarCalc.cxx
application FTCombineBins ../bin/FTCombineBins.cxx
application FTGenerateSummary ../bin/FTGenerateSummary.cxx
application FTConvertToCDI ../bin/FTConvertToCDI.cxx
application FTDump ../bin/FTDump.cxx
application FTCombine ../bin/FTCombine.cxx
application FTPlot ../bin/FTPlot.cxx
application FTCheckOutput ../bin/FTCheckOutput.cxx
application FTExploreFit ../bin/FTExploreFit.cxx
application FTExtrapolateAnalyses ../bin/FTExtrapolateAnalyses.cxx

apply_pattern application_alias application=FTCopyDefaults
apply_pattern application_alias application=FTManipSys
apply_pattern application_alias application=FTDStarCalc
apply_pattern application_alias application=FTCombineBins
apply_pattern application_alias application=FTGenerateSummary
apply_pattern application_alias application=FTConvertToCDI
apply_pattern application_alias application=FTDump
apply_pattern application_alias application=FTCombine
apply_pattern application_alias application=FTPlot
apply_pattern application_alias application=FTCheckOutput
apply_pattern application_alias application=FTExploreFit
apply_pattern application_alias application=FTExtrapolateAnalyses

apply_pattern installed_library

use AtlasROOT			AtlasROOT-*		 External

apply_tag ROOTRooFitLibs
apply_tag ROOTGraphicsLibs
apply_tag ROOTMathLibs

private

#
# The boost templates get a little deep! :-)
#

macro_append Combination_cppflags " -ftemplate-depth-200"

macro_append FTCopyDefaultslinkopts " -lCombination"
macro_append FTManipSyslinkopts " -lCombination"
macro_append FTDStarCalclinkopts " -lCombination"
macro_append FTCombineBinslinkopts " -lCombination"
macro_append FTGenerateSummarylinkopts " -lCombination"
macro_append FTConvertToCDIlinkopts " -lCombination"
macro_append FTDumplinkopts " -lCombination"
macro_append FTCombinelinkopts " -lCombination"
macro_append FTPlotlinkopts " -lCombination"
macro_append FTCheckOutputlinkopts " -lCombination"
macro_append FTExploreFitlinkopts " -lCombination"
macro_append FTExtrapolateAnalyseslinkopts " -lCombination"

macro_append FTCopyDefaults_dependencies " Combination"
macro_append FTManipSys_dependencies " Combination"
macro_append FTDStarCalc_dependencies " Combination"
macro_append FTCombineBins_dependencies " Combination"
macro_append FTGenerateSummary_dependencies " Combination"
macro_append FTConvertToCDI_dependencies " Combination"
macro_append FTDump_dependencies " Combination"
macro_append FTCombine_dependencies " Combination"
macro_append FTPlot_dependencies " Combination"
macro_append FTCheckOutput_dependencies " Combination"
macro_append FTExploreFit_dependencies " Combination"
macro_append FTExtrapolateAnalyses_dependencies " Combination"

#
# Use "make CppUnit" to run the unit tests for this
# package
#

use TestPolicy			TestPolicy-*
#use TestTools			TestTools-*		AtlasTest
apply_pattern CppUnit name=CombinationParserTests files="-s=../test FitLinageTest_CppUnit.cxx CombinerTest_CppUnit.cxx ParserTest_CppUnit.cxx CombinationContextTest_CppUnit.cxx CommonCommandLineUtilsTest_CppUnit.cxx BinBoundaryUtilsTest_CppUnit.cxx CDIConverterTest_CppUnit.cxx MeasurementTest_CppUnit.cxx MeasurementUtilsTest_CppUnit.cxx BinUtilsTest_CppUnit.cxx ExtrapolationToolsTest_CppUnit.cxx"

#
# Turn on debugging if it is needed!!
#

#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
